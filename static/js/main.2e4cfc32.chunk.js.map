{"version":3,"sources":["components/Header.js","context/CaracteristicasContext.js","context/PersonajesContext.js","components/Formulario.js","context/ModalContext.js","components/Personaje.js","components/ListaPersonajes.js","RickAndMortyApp.js","index.js"],"names":["Header","className","CaracteristicasContext","createContext","CaracteristicasProvider","props","useState","caracteristicas","guardarCaracteristicas","nombre","busqueda","buscarCaracteristicas","consultar","guardarConsultar","useEffect","a","url","axios","get","resultado","data","results","obtenerCaracteristicas","Provider","value","children","PersonajesContext","PersonajesProvider","personajes","guardarCategorias","obtenerPersonajes","Formulario","estado","personaje","guardarBusqueda","useContext","console","log","onSubmit","e","preventDefault","name","onChange","target","map","type","ModalContext","ModalProvider","idpersonaje","guardarIdPersonaje","informacion","guardarInformacionPersonaje","obtenerPersonaje","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Personaje","caracteristica","modalStyle","open","setOpen","classes","src","image","alt","onClick","id","Modal","onClose","style","gender","species","status","ListaPersonajes","RickAndMortyApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e4cfc32.chunk.js","sourcesContent":["\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"bg-alert\">\r\n      <h1>Datos de Rick and Morty</h1>\r\n    </header>\r\n  );\r\n}\r\n \r\nexport default Header;","import React, {createContext, useState, useEffect} from 'react';\r\nimport axios from 'axios'\r\nexport const CaracteristicasContext = createContext() \r\n\r\n\r\nconst CaracteristicasProvider = (props) => {\r\n  \r\n  const [caracteristicas, guardarCaracteristicas] = useState([])\r\n  const [busqueda, buscarCaracteristicas] = useState({\r\n    nombre: ''\r\n  })\r\n  \r\n  const [consultar, guardarConsultar] = useState(false)\r\n  \r\n  const {nombre} = busqueda\r\n  \r\n  useEffect(() => {\r\n    \r\n    if(consultar) {\r\n      const obtenerCaracteristicas = async () => {\r\n        // const url = `https://rickandmortyapi.com/api/character/?name=${nombre}&status=${estado}`\r\n        const url = `https://rickandmortyapi.com/api/character/?name=${nombre}`\r\n        \r\n        const resultado = await axios.get(url)\r\n        \r\n        // console.log(resultado.data.results);\r\n        guardarCaracteristicas(resultado.data.results)\r\n      }\r\n      \r\n      obtenerCaracteristicas()\r\n    }\r\n    \r\n  }, [busqueda])\r\n  \r\n  return (\r\n    <CaracteristicasContext.Provider\r\n      value={{\r\n        caracteristicas,\r\n        buscarCaracteristicas,\r\n        guardarConsultar\r\n      }}\r\n    >\r\n      {props.children}\r\n    </CaracteristicasContext.Provider>\r\n  );\r\n}\r\n \r\nexport default CaracteristicasProvider;","import React, {createContext, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n//Creando el contexto para personajes\r\nexport const PersonajesContext = createContext()\r\n\r\n//Provider: AquÃ­ se encuentran las funciones y los estados\r\nconst PersonajesProvider = (props) => {\r\n  \r\n  //Creando el state\r\n  const [personajes, guardarCategorias] = useState([])\r\n  \r\n  //Ejecutar el llamado a la api\r\n  useEffect(() => {\r\n    const obtenerPersonajes = async () => {\r\n      const urlRick = 'https://rickandmortyapi.com/api/character'\r\n      // const url = 'www.thecocktaildb.com/api/json/v1/1/list.php?c=list'\r\n      \r\n      \r\n      const personajes = await axios.get(urlRick)\r\n      \r\n      guardarCategorias(personajes.data.results);\r\n    }\r\n    obtenerPersonajes()\r\n  }, [])\r\n  \r\n  return (\r\n    <PersonajesContext.Provider\r\n      value={{\r\n        personajes \r\n      }}\r\n    >\r\n      {props.children}\r\n    </PersonajesContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PersonajesProvider","import React, { useContext, useState } from 'react';\r\nimport { CaracteristicasContext } from '../context/CaracteristicasContext';\r\nimport {PersonajesContext} from '../context/PersonajesContext'\r\n\r\nconst Formulario = () => {\r\n  \r\n  const [busqueda, guardarBusqueda] = useState({\r\n    estado: '',\r\n    personaje: ''\r\n  })\r\n  \r\n  const {personajes} = useContext(PersonajesContext) \r\n  const {buscarCaracteristicas, guardarConsultar} = useContext(CaracteristicasContext) \r\n  \r\n  //function para leer contenidos\r\n  const obtenerDatosPersonaje = e => {\r\n    guardarBusqueda({\r\n      ...busqueda,\r\n      [e.target.name] : e.target.value\r\n    })\r\n  }\r\n  \r\n  console.log(personajes);\r\n  \r\n  return (\r\n    <form\r\n      className=\"col-12\"\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        buscarCaracteristicas(busqueda)\r\n        guardarConsultar(true)\r\n      }}\r\n    >\r\n      <fieldset className=\"text-center\">\r\n        <legend>Buscar personaje por nombre</legend>\r\n      </fieldset>\r\n      \r\n      <div className=\"row mt-4\">\r\n        \r\n        <div className=\"col-md-6\">\r\n          <select \r\n            className=\"form-control\"\r\n            name=\"nombre\" \r\n            onChange={obtenerDatosPersonaje}\r\n          >\r\n            <option value=\"\">-- Selecciona el nombre del Personaje --</option>  \r\n            {personajes.map(personaje => (\r\n              <option \r\n                key={personaje.name}\r\n                value={personaje.name}\r\n              >{personaje.name}</option>\r\n            ))}          \r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"col-md-6\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-block btn-primary\"\r\n            value=\"Buscar Personaje\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default Formulario;","import React, {createContext, useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const ModalContext = createContext()\r\n\r\nconst ModalProvider = (props) => {\r\n  \r\n  //state del provider\r\n  const [idpersonaje, guardarIdPersonaje] = useState(null)\r\n  const [informacion, guardarInformacionPersonaje] = useState({\r\n    \r\n  })\r\n  \r\n  //Una vez que tenemos el personaje se llama la api\r\n  useEffect(() => {\r\n    const obtenerPersonaje = async () => \r\n    {\r\n      if(!idpersonaje) return\r\n      \r\n      const url = `https://rickandmortyapi.com/api/character/?id=${idpersonaje}`\r\n    \r\n      const resultado = await axios.get(url)\r\n      \r\n      guardarInformacionPersonaje(resultado.data.results);\r\n      \r\n      \r\n    \r\n    }\r\n    obtenerPersonaje()\r\n  }, [idpersonaje])\r\n  \r\n  \r\n  return (\r\n    <ModalContext.Provider\r\n      value={{\r\n        informacion,\r\n        guardarIdPersonaje,\r\n        guardarInformacionPersonaje\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ModalContext.Provider>\r\n  );\r\n}\r\n \r\nexport default ModalProvider;","import React,{useContext, useState} from 'react';\r\nimport { ModalContext } from '../context/ModalContext';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 400,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nconst Personaje = ({caracteristica}) => {\r\n  \r\n  //ConfiguraciÃ³n para el modal de material ui\r\n  const [modalStyle] = useState(getModalStyle)\r\n  const [open, setOpen] = useState(false)\r\n  \r\n  const classes = useStyles()\r\n  \r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  \r\n  //Extrayendo valores del contexto modal\r\n  const {informacion, guardarIdPersonaje, guardarInformacionPersonaje} = useContext(ModalContext)\r\n  \r\n  //Muestra y formatea los personajes\r\n  const mostrarPersonajes = informacion => {\r\n    let personajes = []\r\n    // for(let i = 1; i < 16; i++) {\r\n    //   // if(informacion[i]) {\r\n    //   //   personajes.push(\r\n    //   //     <li key={informacion[i]}>{informacion[i]}</li>\r\n    //   //   )\r\n    //   // }\r\n    //   console.log(informacion[i])\r\n    // }\r\n    \r\n    return personajes\r\n  }\r\n  \r\n  \r\n  return (\r\n    <div className=\"col-md-4 mb-3\">\r\n      <div className=\"card\">\r\n        <h2 className=\"card-header\">{caracteristica.name}</h2>\r\n        \r\n        <img className=\"card-img-top\" src={caracteristica.image} alt={`Imagen de ${caracteristica.name}`} />\r\n        \r\n        <div className=\"card-body\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-clock btn-primary w-100\"\r\n            onClick={() => {\r\n              guardarIdPersonaje(caracteristica.id )\r\n              handleOpen()\r\n            }}\r\n          >\r\n            Ver Detalles\r\n          </button>\r\n          \r\n          <Modal\r\n            open={open}\r\n            onClose={() => {\r\n              guardarIdPersonaje(null)\r\n              guardarInformacionPersonaje({})\r\n              handleClose()\r\n            }}\r\n          >\r\n            <div style={modalStyle} className={classes.paper}>\r\n              <h2>Nombre</h2>\r\n              \r\n              <h3 className=\"mt-4\">{caracteristica.name}</h3>\r\n              \r\n              <img className=\"img-fluid my-4 w-100\" src={caracteristica.image} alt='Imagen'/>\r\n              \r\n              <h3>MÃ¡s datos importantes</h3>\r\n              \r\n              <p>GÃ©nero: {caracteristica.gender}</p>\r\n              <p>Especie: {caracteristica.species}</p>\r\n              <p>Estado: {caracteristica.status}</p>\r\n              {/* <p>Espisodio: {caracteristica.episode}</p> */}\r\n              \r\n              <ul>\r\n                {mostrarPersonajes(informacion)}\r\n              </ul>\r\n            </div>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Personaje;","import React, {useContext} from 'react'\r\nimport Personaje from './Personaje';\r\n\r\nimport {CaracteristicasContext} from '../context/CaracteristicasContext'\r\n\r\nconst ListaPersonajes = () => {\r\n  \r\n  //Extrayendo los personajes\r\n  const {caracteristicas} = useContext(CaracteristicasContext)\r\n    \r\n  return (\r\n    <div className=\"row mt-5\">\r\n      {caracteristicas.map(caracteristica => (\r\n        <Personaje\r\n          key={caracteristica.id}\r\n          caracteristica={caracteristica}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ListaPersonajes;","import Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport ListaPersonajes from \"./components/ListaPersonajes\";\n\nimport PersonajesProvider from \"./context/PersonajesContext\";\nimport CaracteristicasProvider from './context/CaracteristicasContext'\nimport ModalProvider from './context/ModalContext'\n\n\nfunction RickAndMortyApp() {\n  return (\n    <PersonajesProvider>\n      <CaracteristicasProvider>\n        <ModalProvider>\n          \n          <Header />\n          \n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n            </div>\n            \n            <ListaPersonajes />\n          </div>\n          \n        </ModalProvider>\n      </CaracteristicasProvider> \n    </PersonajesProvider>    \n  );\n}\n\nexport default RickAndMortyApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport RickAndMortyApp from './RickAndMortyApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RickAndMortyApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}